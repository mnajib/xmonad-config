#!/run/current-system/sw/bin/env bash

PIPE="/tmp/${USER}-zikirpipe"
MSG="~/.xmonad/message.txt"
LOGFILE="/tmp/${USER}-zikirlog"

LOGMODE="NORMAL"
#LOGMODE="DEBUG"

totalLine=0

#i=`echo "60 * 60 * 6" | bc`
#i=`echo "60 * 1" | bc`
#i=2
i=60
#i=21600
#c=1

# XXX:
dateTime(){
    echo `date "+%F %T"`
}

#
# Usage:
#     log INFO "Length error."
#     log DEBUG "Start fetchData()."
#
log () {
    local logmode=$1
    local logstring=$2
    #local logfile=$3

    # Will use global var: LOG, LOGMODE
    if [ "$LOGMODE" = "DEBUG" ]; then
        # For debugging purpose, log all information
        echo "`date "+%F %T"` ${logmode}: ${logstring}" >> $LOGFILE
    elif [ "$LOGMODE" = "NORMAL" ] && [ "$logmode" = "ERROR" ]; then
        # Normally, just log general information
        echo "`date "+%F %T"` ${logmode}: ${logstring}" >> $LOGFILE
    fi
}

createFifo(){
    mkfifo $PIPE
    mkfifo $LOGFILE
}

# TODO: Read for other text file
declare -a a=(
    "SUBHANALLAH  ==  MAHA SUCI ALLAH"
    "ALHAMDULILLAH  ==  SEGALA PUJI BAGI ALLAH"
    "LAILAHAILLALLAH  ==  TIADA TUHAN SELAIN ALLAH"
    "ALLAHUAKBAR  ==  ALLAH MAHA BESAR"
    "BISMILLAHILLAZI, LA YADHURRUMASMIHI SYAI'UN FIL ARDHI WALA FISSAMA', WAHUAS SAMI'UL 'ALIM.  ==  IN THE NAME OF ALLAH, THROUGH WHOSE NAME, NOTHING IN THE EARTH AND HEAVEN CAN HARM (ME). AND HE IS THE ALL-HEARING, ALL-KNOWING."
    "ALLAHUMMA SOLLI 'ALA SAIYIDINA MUHAMMAD, WA 'ALA ALI SAIYIDINA MUHAMMAD"
    "SUBHANALLAHIWABIHAMDIH, SUBHANALLAHIL'AZIM.  ==  MAHA SUCI ALLAH DENGAN SEGALA PUJI BAGI-NYA, MAHA SUCI ALLAH YANG MAHA AGUNG."
    "ALLAHUMMA A'INNI 'ALA ziKRIKA, WA SHUKRIKA, WA HUSNI 'IBAADATIK.  ==  YA ALLAH, BANTULAH AKU DALAM BERZIKIR KEPADA-MU (MENGINGATI-MU), MENSYUKURI NIKMAT-MU, DAN MELAKUKAN IBADAH YANG BAIK KEPADA-MU."
    )

getTotalLine() {
    totalLine=`wc -l $MSG`
}

# Usage: getRandomLineNumber <max>
getRandomNumWithMax(){
    local max=$1

    # XXX: test
    echo $1
}

# Usage: getTextInLineNumber <filename> <linenum>
getTextInLineNumber(){
    local filename=$1
    local linenum=$2

    #head -4 filename | tail -1
    #sed 4!d filename
    #string=`head -${x} ${MSG} | tail -1`
    local string=`sed ${linenum}!d ${MSG}`

    echo $string
}

# Usage: pushStringToPipe <string> <pipefile>
# Example: pushStringToPipe "string" "/tmp/thepipefile"
pushStringToPipe() {
    local string=$1
    local pipe=$2

    echo $1 > $2
}

#------------------
#function fun1(){
#  echo 34
#}
#
#function fun2(){
#  local res=$(fun1)
#  echo $res
#}
#------------------

sleepLengthInSeconds() {
    local s="$1" # string
    log DEBUG "String: ${s}"
    local size=${#s}
    log DEBUG "String size: ${size}"

    #i=$(( ($size / 5) * 60 ))
    i=$(( ($size / 10) * 60 ))
    #echo "$(( ($size / 5) * 60 ))"
}

while true; do
    for j in "${a[@]}"; do
        #waktu=`~/.xmonad/waktusolat-putrajaya-hbar`
        #echo -en "$waktu\n"

        #echo -en "${c}\n"
        #c=$((c + 1))

        log DEBUG "${j}"
        echo -en "${j}\n" > $PIPE

        sleepLengthInSeconds "$j"
        sleepLengthInMinutes=$(( ${i} /60 ))
        #sleepLengthInMinutes=$(( sleepLengthInSeconds "$j" /60 ))
        log DEBUG "Sleep time: ${sleepLengthInMinutes} minutes."
        sleep ${i}
    done
done
